# Not accurate at the bottom
# -*- coding: utf-8 -*-
"""calc_route-2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WZXGxsRi9PUVPwYrE8PHMT8nrqq2bHxW
"""

import pandas as pd # Import the pandas library
import requests # Import the requests library
from datetime import datetime, timedelta

# Declare variables
URL = "http://192.168.10.10/testCal"
route_1 = "1.662585, 103.598608"
route_2 = "1.463400, 103.764932"

# Load test data
df = pd.read_csv('dataset/output-BJA8742.csv')

print(df.shape)
print(df.head())

date_input = "1/12/2018"
date_range = 1
FMT = '%d/%m/%Y'

dt_dateinput = datetime.strptime(date_input, FMT)
end_date = (dt_dateinput  + timedelta(days=1)).strftime(FMT)

# Reset route_1, route_2 and route_num
df['route_num'] = 0
df['route_1'] = 0.0
df['route_2'] = 0.0

print(df.head())

# Calculate and update route_1 and route_2
def getDictionary(coords, route):
  return {"latlong1": coords, "latlong2": route}

for index, row in df.iterrows():
  latlng = str(row['Lat'])+','+str(row['Lng'])

  df.at[index, 'route_1'] = requests.post(URL, getDictionary(latlng, route_1)).json()
  df.at[index, 'route_2'] = requests.post(URL, getDictionary(latlng, route_2)).json()
  
  print("row_1", datetime.strptime(row["Date"], FMT).strftime(FMT), end_date)
  if datetime.strptime(row["Date"], FMT).strftime(FMT) == end_date:
    break

print(df.head())

status = 0
direction = 0

# Print Columns
print("Index", '\t' ,"Status", '\t',"Direction" , '\t' ,"route_1", '\t' ,"route_2")


# Gets status int and returns string
def getStatus(i):
  if i is 1:
    return "start"
  elif i is 2:
    return "moving"
  elif i is 3:
    return "end"
  else:
    return "idle"

# Gets direction int and returns string
def getDirection(i):
  if i is 0:
    return "|"
  elif i is 1:
    return ">"
  else:
    return "<"

# Determine the status based on coords
for index, row in df.iterrows():
  if status == 1:
    status = 2
  elif status == 3:
    direction = 0
    status = 0
  
  print("Date Now", row["Date"])
  if (float(row['route_1']) < 0.05 or float(row['route_2']) < 0.05) and status == 0:
    nextRow = df.iloc[index+1]
    if (float(nextRow.at['route_1']) >= 0.05 and float(nextRow.at['route_2']) >= 0.05):
      status = 1
      if row['route_1'] > row['route_2']:
        direction = 2
      else:
        direction = 1
  elif (float(row['route_1']) < 0.06 or float(row['route_2']) < 0.06) and status == 2:
    status = 3

  # Update the route_num
  df.at[index, 'route_num'] = direction
  print(index, ":", '\t' ,getStatus(status)+'({0})'.format(status), '\t',getDirection(direction) , '\t\t' ,round(row['route_1'],2), '\t\t' ,round(row['route_2'],2))
  
  print("row_2", datetime.strptime(row["Date"], FMT).strftime(FMT), end_date)
  if datetime.strptime(row["Date"], FMT).strftime(FMT) == end_date:
    break
# Save df to csv
df.to_csv(r'test1.csv', index = False)